//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:2.0.50727.1434
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeroesONE.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "2.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SonicRetro.KensSharp.KensSharp.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: option &apos;&apos;{1}&apos;&apos; is ambiguous ähnelt.
        /// </summary>
        internal static string getoptAmbigious {
            get {
                return ResourceManager.GetString("getoptAmbigious", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: option &apos;&apos;--{1}&apos;&apos; doesn&apos;t allow an argument ähnelt.
        /// </summary>
        internal static string getoptArguments1 {
            get {
                return ResourceManager.GetString("getoptArguments1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: option &apos;&apos;{1}{2}&apos;&apos; doesn&apos;t allow an argument ähnelt.
        /// </summary>
        internal static string getoptArguments2 {
            get {
                return ResourceManager.GetString("getoptArguments2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: illegal option -- {1} ähnelt.
        /// </summary>
        internal static string getoptIllegal {
            get {
                return ResourceManager.GetString("getoptIllegal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: invalid option -- {1} ähnelt.
        /// </summary>
        internal static string getoptInvalid {
            get {
                return ResourceManager.GetString("getoptInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid value {0} for parameter &apos;has_arg&apos;  ähnelt.
        /// </summary>
        internal static string getoptInvalidValue {
            get {
                return ResourceManager.GetString("getoptInvalidValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: option &apos;&apos;{1}&apos;&apos; requires an argument ähnelt.
        /// </summary>
        internal static string getoptRequires {
            get {
                return ResourceManager.GetString("getoptRequires", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: option requires an argument -- {1} ähnelt.
        /// </summary>
        internal static string getoptRequires2 {
            get {
                return ResourceManager.GetString("getoptRequires2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: unrecognized option &apos;&apos;--{1}&apos;&apos; ähnelt.
        /// </summary>
        internal static string getoptUnrecognized {
            get {
                return ResourceManager.GetString("getoptUnrecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}: unrecognized option &apos;&apos;{1}{2}&apos;&apos; ähnelt.
        /// </summary>
        internal static string getoptUnrecognized2 {
            get {
                return ResourceManager.GetString("getoptUnrecognized2", resourceCulture);
            }
        }

        internal static string HelpText
        {
            get
            {
                return ResourceManager.GetString("HelpText", resourceCulture);
            }
        }
    }
}
